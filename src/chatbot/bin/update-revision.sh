#!/bin/bash

pushd `dirname $0`/..  # change to chatbot dir

versionrev_h=./common/versionrev.h

#############################################
### Create versionrev.h if does not exist ###
#############################################

versionrev_macro="AUTO_APP_VERSION_REV"

if ! [ -f $versionrev_h ]; then

    cat > $versionrev_h <<DELIM
#ifndef LVK_COMMON_VERSIONREV_H
#define LVK_COMMON_VERSIONREV_H

// DO NOT EDIT THIS FILE
// This file is automatically updated by bin/update-revision.sh

#define $versionrev_macro     "0"

#endif // LVK_COMMON_VERSIONREV_H
DELIM

fi

###########################################
### Update git revision in versionrev.h ###
###########################################

macro_def_regex="#define\\s\\+$versionrev_macro\\s\\+\"\\([a-f0-9]*\\)\""

# get git HEAD revision
git_head_rev=`git log -n1 --pretty=%H | tr -d [:blank:]`
# get versionrev.h revision
versionrev_h_rev=`cat $versionrev_h | grep $versionrev_macro | sed -e "s/$macro_def_regex/\\1/" | tr -d [:blank:]`

echo "git HEAD revision    : '$git_head_rev'"
echo "versionrev.h revision: '$versionrev_h_rev'"

if [ -z "$git_head_rev" ]; then
   echo "Could not get git revision. Using default revision 0."
   git_head_rev=0
fi

if [ "$git_head_rev" != "$versionrev_h_rev" ]; then
   echo "New version found! Updating revision in versionrev.h..."
   new_macro_def="#define $versionrev_macro     \"$git_head_rev\""
   sed -i -e "s/$macro_def_regex/$new_macro_def/" $versionrev_h
else
   echo "Versions are equal."
fi

popd
